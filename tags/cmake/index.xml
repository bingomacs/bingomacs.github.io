<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CMake on dev.bins</title>
    <link>https://devbins.github.io/tags/cmake/</link>
    <description>Recent content in CMake on dev.bins</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Sun, 06 Dec 2020 00:00:00 +0800</lastBuildDate><atom:link href="https://devbins.github.io/tags/cmake/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CMake基础</title>
      <link>https://devbins.github.io/post/cmake/</link>
      <pubDate>Sun, 06 Dec 2020 00:00:00 +0800</pubDate>
      
      <guid>https://devbins.github.io/post/cmake/</guid>
      <description>前言 自从 AndroidStudio2.2 开始支持 CMAKE 来构建 C/C++ 程序之后，作为 Android 开发就可以使用 CMake 来替换 Android.mk 了。 基本使用 在学习 CMAKE 之前，我们先来看一下如何使用 CMAKE 编译项目。假设 CMakeLists.txt 已经编写完毕，并且是正确的。 mkdir build &amp;amp;&amp;amp; cd build cmake .. make make install 在这个例子中，我们建了一个 build 文件夹用于执行 cmake 指令，这种做法叫做外部编译(out-of-source-build)。注意 cmake .. 这后边有个 .. 这是用于告诉 CMAKE CMakeLists.txt 在哪个文件夹下。 这样做有一个好处就是不会污染源码，因为在执行 cmake 的过程</description>
    </item>
    
  </channel>
</rss>
