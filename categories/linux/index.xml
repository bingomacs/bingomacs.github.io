<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on 自定义</title>
    <link>https://binsheng.github.io/categories/linux/</link>
    <description>Recent content in Linux on 自定义</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Fri, 28 Sep 2018 00:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://binsheng.github.io/categories/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ArchLinux 安装 UEFI &#43; GPT</title>
      <link>https://binsheng.github.io/post/archlinux%E5%AE%89%E8%A3%85uefi/</link>
      <pubDate>Fri, 28 Sep 2018 00:00:00 +0800</pubDate>
      
      <guid>https://binsheng.github.io/post/archlinux%E5%AE%89%E8%A3%85uefi/</guid>
      <description>之前写过一篇 Arch Linux 安装的文章，不过那是使用 MBR 引导的，但是现在很多机器都已经使用上 UEFI 了，这里就是在 UEFI 上的实践。 本篇文章只讲和 MBR 不一样的地方，不然文章会显得啰嗦很长。MBR 安装方式会在文末给出链接，两篇结合起来看会好点。 UEFI 安装前先确认一下是不是 UEFI 启动的。如果是会输出一些文件，如果不是什么都没有。 ls /sys/firmware/efi/efivars 分区 parted malabel gpt # 采用 gpt 分区表 mkpart ESP fat32 1M 513M # 创建 ESP 分区 set 1 boot on # 设置启动 flag mkpart primary ext4 513M 10G # / 根分区 mkpart primary ext4 10G 20G # /home mkpart primary linux-swap</description>
    </item>
    
    <item>
      <title>Arch Linux 安装</title>
      <link>https://binsheng.github.io/post/archlinux/</link>
      <pubDate>Fri, 03 Aug 2018 00:00:00 +0800</pubDate>
      
      <guid>https://binsheng.github.io/post/archlinux/</guid>
      <description>今年开始我一直使用 Manjaro ，这是一个基于 Arch 的发行版，有较友好的安装界面。省去了不少折腾，但是这也带来了一些问题，你不知道有些东西是没有必要的，驱动怎么安装，分区怎么分。从头开始会让你更了解 Linux ，虽然这么说，但我还是没有选择折腾，直到最近在升级的时候有线网卡找不到了，一下子和全球的人失去了联系，进入了孤岛，这是多么痛苦的一件事。于是下定决心，折腾一下。 本文不适合一点 Linux 都不懂的小白，至少你有使用过，懂得基本命</description>
    </item>
    
    <item>
      <title>小米路由器刷 Padavan</title>
      <link>https://binsheng.github.io/post/miwifipadavan/</link>
      <pubDate>Sun, 13 May 2018 00:00:00 +0800</pubDate>
      
      <guid>https://binsheng.github.io/post/miwifipadavan/</guid>
      <description>半个月前，我把小米路由器刷成了 openwrt，使用之后发现很难受。很多软件没办法直接下载，更新源也更了半天更不下来。里面的功能配置起来有些复杂不能开箱即用，用来折腾倒是不错，但是一款路由器是可是互联网的通道，随便瞎搞没了网络，就不好玩了。在折腾的过程中发现了 Padavan。刷上用了一段时间还不错，记录一下。 备份重要信息 在刷之前，请确保已经是开发版固件，如果不是请刷到开发版，并开启 SSH。如何操作参</description>
    </item>
    
    <item>
      <title>小米路由器刷 openwrt</title>
      <link>https://binsheng.github.io/post/miwifi/</link>
      <pubDate>Mon, 30 Apr 2018 00:00:00 +0800</pubDate>
      
      <guid>https://binsheng.github.io/post/miwifi/</guid>
      <description>我买过两个小米路由器，一个是小米路由器 mini、另一个是小米路由器 R2D 带硬盘的。mini 一直放在家里用，没怎么去折腾。后来买 R2D 是因为电脑的空间剩余不多，买个带硬盘的，把一部分文件放到路由器上。买来后就不断在小米论坛上逛，看看有没有什么好玩的，后来发现了 openwrt。这就开启了折腾之旅，有搭建网站的、下载的、代理的……各种，这就是一台 Linux 电脑啊，很是兴奋也想搞个自己的。 开始在论坛上找各种教程，发现 R2D 的</description>
    </item>
    
    <item>
      <title>Manjaro 的使用</title>
      <link>https://binsheng.github.io/post/manjaro/</link>
      <pubDate>Thu, 19 Apr 2018 00:00:00 +0800</pubDate>
      
      <guid>https://binsheng.github.io/post/manjaro/</guid>
      <description>Manjaro 使用的原因 最近把操作系统换成了 Linux，Linux 发行版众多，选择一个作为日常使用非常纠结。之前折腾过 RHEL 系、openSUSE、都非常不错，不过装 QQ 等国产软件还是比较麻烦，偶然在emacs-china上看到有人推荐使用 Manjaro 于是我就抱着尝试的心态试试，发现还不错。在distrowatch上排名排在第二，人气很高，这就让我放心了，那么多人使用解决问题也会比较方便。真正让我选择它的是在虚拟机上打开 Android Studio 速</description>
    </item>
    
    <item>
      <title>使用 SSH 登录服务器</title>
      <link>https://binsheng.github.io/post/ssh/</link>
      <pubDate>Sat, 13 Jan 2018 11:30:51 +0800</pubDate>
      
      <guid>https://binsheng.github.io/post/ssh/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;常常和服务器打交道的同志，最频繁的操作就是登陆服务器。每次登陆服务器都要输入密码特别的烦人。
有没有一种办法可以只输入一次密码，以后有都不用再输入密码的办法？如果有多个服务器怎么办？又要输密码吗？
其实我们常常使用 SSH 登录服务器，这个 SSH 就提供了这样的操作，不过需要配置。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>openSUSE 下安装 Parallels Tools</title>
      <link>https://binsheng.github.io/post/opensuse/</link>
      <pubDate>Mon, 18 Sep 2017 00:00:00 +0800</pubDate>
      
      <guid>https://binsheng.github.io/post/opensuse/</guid>
      <description>Parallels Desktop 是 macOS 上一款优秀的虚拟机软件，支持各种操作系统。然而想要在其上面愉快的使用桌面操作系统，还需要在虚拟机上安装 Parallels Tools 这个工具。在 Windows 上和 Ubuntu 以及 Centos 上安装还是非常简单，然而我在 openSUSE 上尝试却失败了，寻找良久才找到解决方法。遂以此文纪念我踩过的坑，以便给后人提供参考，而不会错过一些美好的事情。 安装 Parallels Tools 初试 在 Parallels Desktop 上成功安装好 openSUSE 后，把 Parallels Tools 挂载到系统（不要和我说你不知道怎么操作）。进入挂载的目录，并执行安装程序 cd /run/media/$USER/Parallels Tools/</description>
    </item>
    
    <item>
      <title>Tmux</title>
      <link>https://binsheng.github.io/post/tmux/</link>
      <pubDate>Sun, 18 Jun 2017 00:00:00 +0800</pubDate>
      
      <guid>https://binsheng.github.io/post/tmux/</guid>
      <description>做开发经常需要在各种环境中切来切去，回来的时候环境已经变了。Tmux 可以创建多个会话在不同环境中切换，回来的时候还是那个她，熟悉的味道。 什么是 Tmux Tmux 的自述 tmux is a terminal multiplexer: it enables a number of terminals to be created, accessed, and controlled from a single screen. tmux may be detached from a screen and continue running in the background, then later reattached. 说人话 Tmux 是终端复用器，它使多个终端被创建，访问，并从单一屏幕控制。Tmux 可以从屏幕分离并继续在后台运行，然后重新连接。 Tmux 有什么用 举个例子： 你连上服务器后做了一会事情要回到本</description>
    </item>
    
  </channel>
</rss>