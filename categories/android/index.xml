<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android on dev.bins</title>
    <link>https://devbins.github.io/categories/android/</link>
    <description>Recent content in Android on dev.bins</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Sat, 27 Jul 2019 00:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://devbins.github.io/categories/android/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>RxLifecycle 原理解析</title>
      <link>https://devbins.github.io/post/rxlifecycle/</link>
      <pubDate>Sat, 27 Jul 2019 00:00:00 +0800</pubDate>
      
      <guid>https://devbins.github.io/post/rxlifecycle/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Photo by Léonard Cotte on Unsplash&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;介绍&#34;&gt;介绍&lt;/h2&gt;
&lt;p&gt;从名字中可以看出 &lt;code&gt;RxLifecycle&lt;/code&gt; 和生命周期有关。也的确如此， &lt;code&gt;RxLifecycle&lt;/code&gt; 通过监听生命周期的变化，来解决 &lt;code&gt;RxJava&lt;/code&gt; 内存泄漏的问题。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Retrofit 源码解析</title>
      <link>https://devbins.github.io/post/retrofit/</link>
      <pubDate>Sun, 02 Dec 2018 00:00:00 +0800</pubDate>
      
      <guid>https://devbins.github.io/post/retrofit/</guid>
      <description>&lt;p&gt;Photo by Kimon Maritz on Unsplash&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Retrofit 是 square 推出用来请求 RESTful 风格 API 的网络库，可以让开发人员快速开发 RESTful 风格的应用。&lt;/p&gt;
&lt;p&gt;本文基于 &lt;code&gt;retrofit2.5.0&lt;/code&gt; 进行分析。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>在 Docker 中使用 nexus3 构建 Android 私有仓库</title>
      <link>https://devbins.github.io/post/nexus3/</link>
      <pubDate>Mon, 05 Nov 2018 00:00:00 +0800</pubDate>
      
      <guid>https://devbins.github.io/post/nexus3/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;在 Android 中使用第三库有两种方式，第一种是把 jar 文件放到 libs 目录下作为 library 引用，第二种需要开发者把编译好的 jar 包上传到类似 maven 这种中央仓库，然后在项目中添加依赖就可以了。&lt;/p&gt;
&lt;p&gt;使用 jcenter 来管理第三方库在升级版本时非常方便，只需要更改版本号就可以了。不然每次版本升级都需要到指定的地方下载下来，然后替换旧版本，这样就非常麻烦。但是 maven 是所有人员都可以访问的，有一些公司的项目是不能公开，所以需要我们搭建自己的 maven 仓库，这就是本文要讲的。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Android 网络服务发现（NSD）</title>
      <link>https://devbins.github.io/post/nsd/</link>
      <pubDate>Mon, 03 Oct 2016 00:00:00 +0800</pubDate>
      
      <guid>https://devbins.github.io/post/nsd/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;这些日子碰到这样一个需求，需要在局域网中发现我们创建的某个特定设备，并连上互相通信。本以为要去遍历整个局域网，后来查阅相关资料后发现 Android 为我们提供了网络服务发现（Network Service Discovery）简称 NSD，就是本文要讲的东西了。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
  </channel>
</rss>